services:
  restaurant-db:
    image: postgres
    env_file:
      - .env
#    command: >
#      /bin/sh -c "chmod 600 /etc/ssl/${SSL_CERT_SERVER} /etc/ssl/${SSL_KEY_SERVER}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      SSL_KEY_SERVER: ${SSL_KEY_SERVER}
      SSL_CERT_SERVER: ${SSL_CERT_SERVER}
      POSTGRES_INITDB_ARGS: "-c ssl=on -c ssl_cert_file=/etc/ssl/${SSL_CERT_SERVER} -c ssl_key_file=/etc/ssl/${SSL_KEY_SERVER}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./certs:/etc/ssl/certs
    entrypoint: /bin/sh -c "chmod 600 /etc/ssl/${SSL_CERT_SERVER} /etc/ssl/${SSL_KEY_SERVER} && chown postgres:postgres /etc/ssl/${SSL_CERT_SERVER} /etc/ssl/${SSL_KEY_SERVER} && docker-entrypoint.sh postgres"
    ports:
      - "5432:${POSTGRES_PORT}"
    networks:
      - ow_mst

  mst-web:
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    working_dir: /mst
    ports:
      - "8000:8000"
    depends_on:
      - restaurant-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SSL_KEY_SERVER: ${SSL_KEY_SERVER}
      SSL_CERT_SERVER: ${SSL_CERT_SERVER}
      DATABASE_URL: ${DATABASE_URL}
    command: >
      /bin/sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --ssl-keyfile /etc/ssl/${SSL_KEY_SERVER} --ssl-certfile /etc/ssl/${SSL_CERT_SERVER} --reload"
    volumes:
      - .:/mst
      - ./certs:/etc/ssl/certs
    stdin_open: true
    tty: true
    networks:
      - ow_mst

networks:
  ow_mst:
    driver: bridge

volumes:
  postgres_data:
